import numpy 
from PIL import Image
import networkx as nx
from pathfinding.core.diagonal_movement import DiagonalMovement
from pathfinding.core.grid import Grid
from pathfinding.finder.a_star import AStarFinder
from pathfinding.finder.dijkstra import DijkstraFinder
from pathfinding.finder.best_first import BestFirst
from pathfinding.finder.ida_star import IDAStarFinder
from pathfinding.finder.bi_a_star import BiAStarFinder
from pathfinding.finder.breadth_first import BreadthFirstFinder

from matplotlib import pyplot
from scipy.sparse.csgraph import shortest_path
from numba import njit, jit, prange
import math
# from navigation.utilities.astar import astar

import pyastar
import time
from scipy.ndimage.filters import gaussian_filter
# import cv2

@njit()
def remap(value, old_min, old_max, new_min, new_max):
    old_range = (old_max - old_min)
    new_range = (new_max - new_min)
    return (((value - old_min)*new_range)/old_range)+new_min

@njit
def fix_scores(array, elevation : numpy.ndarray):
    min_elevation = elevation.min()
    max_elevation = elevation.max()

    for x in prange(array.shape[0]):
        for y in prange(array.shape[1]):
            if array[x][y] == 0.0:
                array[x][y] = 1 + ( elevation[x][y])
            if array[x][y] == 500:
                array[x][y] = 500
            if array[x][y] == 700:
                elevation_alpha = remap(elevation[x][y], min_elevation, max_elevation, 0.0, 1.0)
                elevation_alpha = math.pow(math.pow(elevation_alpha, 0.25)*1.5, 4)
                elevation_value = remap(elevation_alpha, 0.0, 1.0, min_elevation, max_elevation)
                array[x][y] = 700 + elevation_value 

@njit
def flip_scorecard(array, new_array):
    for x in prange(array.shape[0]):
        for y in prange(array.shape[1]):
            v = new_array.shape[1]-1
            new_array[y][x] = array[x][y]
    
            

def get_path(predecessors, i, j):
    path = [j]
    k = j
    while predecessors[i, k] != -9999:
        path.append(predecessors[i,k ])
        k = predecessors[i, k]
    return path[::-1]

def get_valid_point_in_radius(arr, x, y, radius: float = 10.0):
    offsets = [(-1, 0), (1, 0), (-1, -1), (1, -1), (-1, 1), (1, 1), (0, -1), (0, 1)]
    found = False
    # final
    final_pos = [0,0]
    for g in range(1, int(radius)):
        for offset in offsets:
            i = y+(offset[1]*g)
            j = x+(offset[0]*g)
            if arr[i][j] != 0:
                found = True
                final_pos = [j, i]
                break
        if found:
            break
    return final_pos
    #return (final_pos[1], final_pos[0])

def get_path_to(start, end):
    with open("./models/Project/BF3 Bots 0.0.4/Level/XP1_004/elevation.npy", "rb") as f:
        elevation = numpy.load(f)
    with open("./models/Project/BF3 Bots 0.0.4/Level/XP1_004/data.npy", "rb") as f:
        arr = numpy.load(f)
        fix_scores(arr, elevation)
        # new_arr = numpy.zeros(arr.shape)
        # flip_scorecard(arr, new_arr)
        arr = new_arr
        arr = arr.astype(numpy.float32)
        path = pyastar.astar_path(arr, (344, 601),  get_valid_point_in_radius(arr, 353, 631), allow_diagonal=True)


with open("./models/Project/BF3 Bots 0.0.4/Level/XP1_004/elevation.npy", "rb") as f:
    elevation : numpy.ndarray = numpy.load(f)[0]
    elevation_g = numpy.abs(numpy.gradient(elevation, axis=0))
    # print(elevation_g)
    

with open("./models/Project/BF3 Bots 0.0.4/Level/MP_Subway/data.npy", "rb") as f:
    with open('./models/Project/BF3 Bots 0.0.4/Level/XP1_004/df.npy', 'rb') as fx:
        elevation_arr = numpy.load(fx)[0]
        # elevation_arr = numpy.power(elevation_arr, 0.2)
        # elevation_arr = numpy.max(elevation_arr[1]) - elevation_arr
        # elevation_arr = numpy.power(elevation_arr, 4.0)

    with open('./models/Project/BF3 Bots 0.0.4/Level/XP1_004/costs.npy', 'rb') as fx:
        costs_arr = numpy.load(fx)[0]
    with open('./models/Project/BF3 Bots 0.0.4/Level/XP1_004/feature.npy', 'rb') as fx:
        feature_arr = numpy.load(fx)[0]
    arr = numpy.load(f)[0]
    new_arr = numpy.zeros(arr.shape)
    print(new_arr.shape, arr.shape)
    fix_scores(arr, elevation)
    # flip_scorecard(arr, new_arr)
    # arr = new_arr
    # print(arr.transpose())
    
    arr = arr.astype(numpy.float32)
    #arr = gaussian_filter(arr, sigma=1.0).astype(numpy.int32)
    print("finding path")
    # 703 828
    #print(arr[703][828])
    print(arr[828][704])
    #print(arr)
    ts = time.time()
    #path = pyastar.astar_path(arr, (749, 814),  get_valid_point_in_radius(arr, 700, 757), False)
    #path = pyastar.astar_path(arr, (601, 344),  get_valid_point_in_radius(arr, 632, 353), allow_diagonal=False)
    #path = pyastar.astar_path(arr, (353, 659),  get_valid_point_in_radius(arr, 341, 591), allow_diagonal=True)
    #path = pyastar.astar_path(arr, (684, 397),  get_valid_point_in_radius(arr, 658, 444), allow_diagonal=False)
    # path = pyastar.astar_path(arr, (745, 528),  get_valid_point_in_radius(arr, 848, 596), allow_diagonal=True)
    # path = pyastar.astar_path(arr, (1100, 924 ),  get_valid_point_in_radius(arr, 1044, 938 ), allow_diagonal=True)

    te = time.time()
    print(te - ts)
    
    # print(path)

    # print(arr[432,585])
    # grid = Grid(matrix=arr)
    # start = grid.node(749, 814) #grid.node(864, 793) #grid.node(688, 855)
    # calc_end = get_valid_point_in_radius(arr, 669, 740)
    # end   = grid.node(*calc_end) #grid.node(864, 700) #grid.node(793, 807)
    # print("Running pathfinder")
    # ts = time.time()
    # finder = AStarFinder(diagonal_movement=DiagonalMovement.always, weight=1.0)
    # path , runs = finder.find_path(start, end, grid)
    # te = time.time()
    # print("Done", te-ts)
    path =  [(1129, 1555, 0),(1129, 1554, 0),(1130, 1554, 0),(1130, 1553, 0),(1130, 1552, 0),(1130, 1551, 0),(1130, 1550, 0),(1131, 1550, 0),(1132, 1550, 0),(1133, 1550, 0),(1134, 1550, 0),(1134, 1551, 0),(1135, 1551, 0),(1135, 1552, 0),(1136, 1552, 0),(1137, 1552, 0),(1138, 1552, 0),(1139, 1552, 0),(1140, 1552, 0),(1141, 1552, 0),(1142, 1552, 0),(1143, 1552, 0),(1144, 1552, 0),(1144, 1551, 0),(1145, 1551, 0),(1146, 1551, 0),(1147, 1551, 0),(1148, 1551, 0),(1149, 1551, 0),(1150, 1551, 0),(1151, 1551, 0),(1152, 1551, 0),(1152, 1550, 0),(1153, 1550, 0),(1153, 1549, 0),(1154, 1549, 0),(1154, 1548, 0),(1155, 1548, 0),(1155, 1547, 0),(1155, 1546, 0),(1155, 1545, 0),(1155, 1544, 0),(1155, 1543, 0),(1155, 1542, 0),(1155, 1541, 0),(1155, 1540, 0),(1155, 1539, 0),(1154, 1539, 0),(1154, 1538, 0),(1154, 1537, 0),(1153, 1537, 0),(1153, 1536, 0),(1152, 1536, 0),(1151, 1536, 0),(1150, 1536, 0),(1149, 1536, 0),(1148, 1536, 0),(1147, 1536, 0),(1146, 1536, 0),(1146, 1535, 0),(1146, 1534, 0),(1146, 1533, 0),(1146, 1532, 0),(1146, 1531, 0),(1145, 1531, 0),(1145, 1530, 0),(1144, 1530, 0),(1144, 1529, 0),(1143, 1529, 0),(1142, 1529, 0),(1141, 1529, 0),(1141, 1528, 0),(1141, 1527, 0),(1140, 1527, 0),(1140, 1526, 0),(1139, 1526, 0),(1138, 1526, 0),(1138, 1525, 0),(1137, 1525, 0),(1136, 1525, 0),(1135, 1525, 0),(1135, 1524, 0),(1135, 1523, 0),(1135, 1522, 0),(1135, 1521, 0),(1134, 1521, 0),(1134, 1520, 0),(1133, 1520, 0),(1133, 1519, 0),(1132, 1519, 0),(1132, 1518, 0),(1131, 1518, 0),(1131, 1517, 0),(1130, 1517, 0),(1130, 1516, 0),(1130, 1515, 0),(1130, 1514, 0),(1129, 1514, 0),(1128, 1514, 0),(1128, 1513, 0),(1127, 1513, 0),(1127, 1512, 0),(1126, 1512, 0),(1126, 1511, 0),(1125, 1511, 0),(1125, 1510, 0),(1125, 1509, 0),(1125, 1508, 0),(1125, 1507, 0),(1125, 1506, 0),(1125, 1505, 0),(1125, 1504, 0),(1125, 1503, 0),(1125, 1502, 0),(1125, 1501, 0),(1124, 1501, 0),(1124, 1500, 0),(1124, 1499, 0),(1124, 1498, 0),(1124, 1497, 0),(1124, 1496, 0),(1124, 1495, 0),(1124, 1494, 0),(1124, 1493, 0),(1125, 1493, 0),(1125, 1492, 0),(1125, 1491, 0),(1126, 1491, 0),(1126, 1490, 0),(1126, 1489, 0),(1126, 1488, 0),(1127, 1488, 0),(1127, 1487, 0),(1127, 1486, 0),(1127, 1485, 0),(1128, 1485, 0),(1128, 1484, 0),(1129, 1484, 0),(1130, 1484, 0),(1131, 1484, 0),(1132, 1484, 0),(1133, 1484, 0),(1134, 1484, 0),(1135, 1484, 0),(1135, 1483, 0),(1135, 1482, 0),(1136, 1482, 0),(1136, 1481, 0),(1136, 1480, 0),(1136, 1479, 0),(1137, 1479, 0),(1137, 1478, 0),(1137, 1477, 0),(1138, 1477, 0),(1138, 1476, 0),(1138, 1475, 0),(1139, 1475, 0),(1139, 1474, 0),(1139, 1473, 0),(1139, 1472, 0),(1139, 1471, 0),(1139, 1470, 0),(1139, 1469, 0),(1139, 1468, 0),(1139, 1467, 0),(1139, 1466, 0),(1139, 1465, 0),(1139, 1464, 0),(1139, 1463, 0),(1139, 1462, 0),(1139, 1461, 0),(1139, 1460, 0),(1139, 1459, 0),(1139, 1458, 0),(1139, 1457, 0),(1139, 1456, 0),(1139, 1455, 0),(1139, 1454, 0),(1139, 1453, 0),(1139, 1452, 0),(1139, 1451, 0),(1139, 1450, 0),(1139, 1449, 0),(1139, 1448, 0),(1139, 1447, 0),(1139, 1446, 0),(1139, 1445, 0),(1139, 1444, 0),(1139, 1443, 0),(1139, 1442, 0),(1139, 1441, 0),(1139, 1440, 0),(1139, 1439, 0),(1139, 1438, 0),(1139, 1437, 0),(1139, 1436, 0),(1139, 1435, 0),(1139, 1434, 0),(1139, 1433, 0),(1139, 1432, 0),(1139, 1431, 0),(1139, 1430, 0),(1139, 1429, 0),(1139, 1428, 0),(1139, 1427, 0),(1139, 1426, 0),(1139, 1425, 0),(1139, 1424, 0),(1139, 1423, 0),(1139, 1422, 0),(1139, 1421, 0),(1139, 1420, 0),(1139, 1419, 0),(1139, 1418, 0),(1139, 1417, 0),(1139, 1416, 0),(1139, 1415, 0),(1139, 1414, 0),(1139, 1413, 0),(1139, 1412, 0),(1139, 1411, 0),(1139, 1410, 0),(1139, 1409, 0),(1139, 1408, 0),(1139, 1407, 0),(1139, 1406, 0),(1139, 1405, 0),(1139, 1404, 0),(1139, 1403, 0),(1139, 1402, 0),(1139, 1401, 0),(1139, 1400, 0),(1139, 1399, 0),(1139, 1398, 0),(1139, 1397, 0),(1139, 1396, 0),(1139, 1395, 0),(1139, 1394, 0),(1139, 1393, 0),(1139, 1392, 0),(1139, 1391, 0),(1139, 1390, 0),(1139, 1389, 0),(1139, 1388, 0),(1139, 1387, 0),(1139, 1386, 0),(1139, 1385, 0),(1139, 1384, 0),(1139, 1383, 0),(1139, 1382, 0),(1139, 1381, 0),(1139, 1380, 0),(1139, 1379, 0),(1139, 1378, 0),(1139, 1377, 0),(1139, 1376, 0),(1139, 1375, 0),(1139, 1374, 0),(1139, 1373, 0),(1139, 1372, 0),(1139, 1371, 0),(1139, 1370, 0),(1139, 1369, 0),(1139, 1368, 0),(1139, 1367, 0),(1139, 1366, 0),(1139, 1365, 0),(1139, 1364, 0),(1139, 1363, 0),(1139, 1362, 0),(1139, 1361, 0),(1139, 1360, 0),(1139, 1359, 0),(1139, 1358, 0),(1139, 1357, 0),(1139, 1356, 0),(1139, 1355, 0),(1139, 1354, 0),(1139, 1353, 0),(1139, 1352, 0),(1139, 1351, 0),(1139, 1350, 0),(1139, 1349, 0),(1139, 1348, 0),(1139, 1347, 0),(1139, 1346, 0),(1139, 1345, 0),(1139, 1344, 0),(1139, 1343, 0),(1139, 1342, 0),(1139, 1341, 0),(1139, 1340, 0),(1139, 1339, 0),(1139, 1338, 0),(1139, 1337, 0),(1139, 1336, 0),(1139, 1335, 0),(1139, 1334, 0),(1139, 1333, 0),(1139, 1332, 0),(1139, 1331, 0),(1139, 1330, 0),(1139, 1329, 0),(1139, 1328, 0),(1139, 1327, 0),(1139, 1326, 0),(1139, 1325, 0),(1139, 1324, 0),(1139, 1323, 0),(1139, 1322, 0),(1139, 1321, 0),(1139, 1320, 0),(1139, 1319, 0),(1139, 1318, 0),(1139, 1317, 0),(1139, 1316, 0),(1139, 1315, 0),(1139, 1314, 0),(1139, 1313, 0),(1139, 1312, 0),(1139, 1311, 0),(1139, 1310, 0),(1139, 1309, 0),(1139, 1308, 0),(1139, 1307, 0),(1139, 1306, 0),(1139, 1305, 0),(1139, 1304, 0),(1139, 1303, 0),(1139, 1302, 0),(1139, 1301, 0),(1139, 1300, 0),(1139, 1299, 0),(1139, 1298, 0),(1139, 1297, 0),(1139, 1296, 0),(1139, 1295, 0),(1139, 1294, 0),(1139, 1293, 0),(1139, 1292, 0),(1139, 1291, 0),(1139, 1290, 0),(1139, 1289, 0),(1139, 1288, 0),(1139, 1287, 0),(1139, 1286, 0),(1139, 1285, 0),(1139, 1284, 0),(1139, 1283, 0),(1139, 1282, 0),(1139, 1281, 0),(1139, 1280, 0),(1139, 1279, 0),(1139, 1278, 0),(1139, 1277, 0),(1139, 1276, 0),(1139, 1275, 0),(1139, 1274, 0),(1139, 1273, 0),(1139, 1272, 0),(1139, 1271, 0),(1139, 1270, 0),(1139, 1269, 0),(1139, 1268, 0),(1139, 1267, 0),(1139, 1266, 0),(1139, 1265, 0),(1139, 1264, 0),(1139, 1263, 0),(1139, 1262, 0),(1139, 1261, 0),(1139, 1260, 0),(1139, 1259, 0),(1139, 1258, 0),(1139, 1257, 0),(1139, 1256, 0),(1139, 1255, 0),(1139, 1254, 0),(1139, 1253, 0),(1139, 1252, 0),(1139, 1251, 0),(1139, 1250, 0),(1139, 1249, 0),(1139, 1248, 0),(1139, 1247, 0),(1139, 1246, 0),(1139, 1245, 0),(1139, 1244, 0),(1139, 1243, 0),(1139, 1242, 0),(1139, 1241, 0),(1139, 1240, 0),(1139, 1239, 0),(1139, 1238, 0),(1139, 1237, 0),(1139, 1236, 0),(1139, 1235, 0),(1139, 1234, 0),(1139, 1233, 0),(1139, 1232, 0),(1139, 1231, 0),(1139, 1230, 0),(1139, 1229, 0),(1139, 1228, 0),(1139, 1227, 0),(1139, 1226, 0),(1139, 1225, 0),(1139, 1224, 0),(1139, 1223, 0),(1139, 1222, 0),(1139, 1221, 0),(1139, 1220, 0),(1139, 1219, 0),(1139, 1218, 0),(1139, 1217, 0),(1139, 1216, 0),(1139, 1215, 0),(1139, 1214, 0),(1139, 1213, 0),(1139, 1212, 0),(1139, 1211, 0),(1139, 1210, 0),(1139, 1209, 0),(1139, 1208, 0),(1139, 1207, 0),(1139, 1206, 0),(1139, 1205, 0),(1139, 1204, 0),(1139, 1203, 0),(1139, 1202, 0),(1139, 1201, 0),(1139, 1200, 0),(1139, 1199, 0),(1139, 1198, 0),(1139, 1197, 0),(1139, 1196, 0),(1139, 1195, 0),(1139, 1194, 0),(1139, 1193, 0),(1139, 1192, 0),(1139, 1191, 0),(1139, 1190, 0),(1139, 1189, 0),(1139, 1188, 0),(1139, 1187, 0),(1139, 1186, 0),(1139, 1185, 0),(1139, 1184, 0),(1139, 1183, 0),(1139, 1182, 0),(1139, 1181, 0),(1139, 1180, 0),(1139, 1179, 0),(1139, 1178, 0),(1139, 1177, 0),(1139, 1176, 0),(1139, 1175, 0),(1139, 1174, 0),(1139, 1173, 0),(1139, 1172, 0),(1139, 1171, 0),(1139, 1170, 0),(1139, 1169, 0),(1139, 1168, 0),(1139, 1167, 0),(1139, 1166, 0),(1139, 1165, 0),(1139, 1164, 0),(1139, 1163, 0),(1139, 1162, 0),(1139, 1161, 0),(1139, 1160, 0),(1139, 1159, 0),(1139, 1158, 0),(1139, 1157, 0),(1139, 1156, 0),(1139, 1155, 0),(1139, 1154, 0),(1139, 1153, 0),(1139, 1152, 0),(1139, 1151, 0),(1139, 1150, 0),(1139, 1149, 0),(1139, 1148, 0),(1139, 1147, 0),(1139, 1146, 0),(1139, 1145, 0),(1139, 1144, 0),(1139, 1143, 0),(1139, 1142, 0),(1139, 1141, 0),(1139, 1140, 0),(1139, 1139, 0),(1139, 1138, 0),(1139, 1137, 0),(1139, 1136, 0),(1139, 1135, 0),(1139, 1134, 0),(1139, 1133, 0),(1139, 1132, 0),(1139, 1131, 0),(1139, 1130, 0),(1139, 1129, 0),(1139, 1128, 0),(1139, 1127, 0),(1139, 1126, 0),(1139, 1125, 0),(1139, 1124, 0),(1139, 1123, 0),(1139, 1122, 0),(1139, 1121, 0),(1139, 1120, 0),(1139, 1119, 0),(1139, 1118, 0),(1139, 1117, 0),(1139, 1116, 0),(1139, 1115, 0),(1139, 1114, 0),(1139, 1113, 0),(1139, 1112, 0),(1139, 1111, 0),(1139, 1111, 1),(1139, 1110, 1),(1139, 1109, 1),(1139, 1108, 1),(1139, 1107, 1),(1139, 1106, 1),(1139, 1105, 1),(1139, 1104, 1),(1139, 1103, 1),(1139, 1102, 1),(1139, 1101, 1),(1139, 1100, 1),(1139, 1099, 1),(1139, 1098, 1),(1139, 1097, 1),(1139, 1096, 1),(1139, 1095, 1),(1139, 1094, 1),(1139, 1093, 1),(1139, 1092, 1),(1139, 1091, 1),(1139, 1090, 1),(1139, 1089, 1),(1139, 1088, 1),(1139, 1087, 1),(1139, 1086, 1),(1139, 1085, 1),(1139, 1084, 1),(1139, 1083, 1),(1139, 1082, 1),(1139, 1081, 1),(1139, 1080, 1),(1139, 1079, 1),(1139, 1078, 1),(1139, 1077, 1),(1139, 1076, 1),(1139, 1075, 1),(1139, 1074, 1),(1139, 1073, 1),(1139, 1072, 1),(1139, 1071, 1),(1139, 1070, 1),(1139, 1069, 1),(1139, 1068, 1),(1139, 1067, 1),(1139, 1066, 1),(1139, 1065, 1),(1139, 1064, 1),(1139, 1063, 1),(1139, 1062, 1),(1139, 1061, 1),(1139, 1060, 1),(1139, 1059, 1),(1139, 1058, 1),(1139, 1057, 1),(1139, 1056, 1),(1139, 1055, 1),(1139, 1054, 1),(1139, 1053, 1),(1139, 1052, 1),(1139, 1051, 1),(1139, 1050, 1),(1139, 1049, 1),(1139, 1048, 1),(1139, 1047, 1),(1139, 1046, 1),(1139, 1045, 1),(1139, 1044, 1),(1139, 1043, 1),(1139, 1042, 1),(1139, 1041, 1),(1139, 1040, 1),(1139, 1039, 1),(1139, 1038, 1),(1139, 1037, 1),(1139, 1036, 1),(1140, 1036, 1),(1140, 1035, 1),(1140, 1034, 1),(1141, 1034, 1),(1142, 1034, 1),(1142, 1033, 1),(1143, 1033, 1),(1144, 1033, 1),(1145, 1033, 1),(1145, 1032, 1),(1145, 1031, 1),(1145, 1030, 1),(1145, 1029, 1),(1145, 1028, 1),(1145, 1027, 1),(1145, 1026, 1),(1145, 1025, 1),(1145, 1024, 1),(1145, 1023, 1),(1145, 1022, 1),(1145, 1021, 1),(1145, 1020, 1),(1145, 1019, 1),(1145, 1018, 1),(1145, 1017, 1),(1145, 1016, 1),(1145, 1015, 1),(1145, 1014, 1),(1145, 1013, 1),(1145, 1012, 1),(1145, 1011, 1),(1145, 1010, 1),(1145, 1009, 1),(1145, 1008, 1),(1145, 1007, 1),(1145, 1006, 1),(1145, 1005, 1),(1145, 1004, 1),(1145, 1003, 1),(1145, 1002, 1),(1145, 1001, 1),(1145, 1000, 1),(1145, 999, 1),(1145, 998, 1),(1145, 997, 1),(1145, 996, 1),(1145, 995, 1),(1145, 994, 1),(1145, 993, 1),(1145, 992, 1),(1145, 991, 1),(1145, 990, 1),(1145, 989, 1),(1145, 988, 1),(1145, 987, 1),(1145, 986, 1),(1145, 985, 1),(1145, 984, 1),(1145, 983, 1),(1145, 982, 1),(1145, 981, 1),(1145, 980, 1),(1145, 979, 1),(1145, 978, 1),(1145, 977, 1),(1145, 976, 1),(1145, 975, 1),(1145, 974, 1),(1145, 973, 1),(1145, 972, 1),(1145, 971, 1),(1145, 971, 0),(1145, 970, 0),(1145, 969, 0),(1145, 968, 0),(1145, 967, 0),(1145, 966, 0),(1145, 965, 0),(1145, 964, 0),(1145, 963, 0),(1145, 962, 0),(1145, 961, 0),(1145, 960, 0),(1145, 959, 0),(1145, 958, 0),(1145, 957, 0),(1145, 956, 0),(1145, 955, 0),(1145, 954, 0),(1145, 953, 0),(1145, 952, 0),(1145, 951, 0),(1145, 950, 0),(1145, 949, 0),(1145, 948, 0),(1145, 947, 0),(1145, 946, 0),(1145, 945, 0),(1145, 944, 0),(1145, 943, 0),(1145, 942, 0),(1145, 941, 0),(1145, 940, 0),(1145, 939, 0),(1145, 938, 0),(1145, 937, 0),(1145, 936, 0),(1145, 935, 0),(1145, 934, 0),(1145, 933, 0),(1145, 932, 0),(1145, 931, 0),(1145, 930, 0),(1145, 929, 0),(1145, 928, 0),(1145, 927, 0),(1145, 926, 0),(1145, 925, 0),(1145, 924, 0),(1145, 923, 0),(1145, 922, 0),(1145, 921, 0),(1145, 920, 0),(1145, 919, 0),(1145, 918, 0),(1145, 917, 0),(1145, 916, 0),(1145, 915, 0),(1145, 914, 0),(1145, 913, 0),(1145, 912, 0),(1145, 911, 0),(1145, 910, 0),(1145, 909, 0),(1145, 908, 0),(1145, 907, 0),(1145, 906, 0),(1145, 905, 0),(1145, 904, 0),(1145, 903, 0),(1145, 902, 0),(1145, 901, 0),(1145, 900, 0),(1145, 899, 0),(1145, 898, 0),(1145, 897, 0),(1145, 896, 0),(1145, 895, 0),(1145, 894, 0),(1145, 893, 0),(1145, 892, 0),(1145, 891, 0),(1145, 890, 0),(1145, 889, 0),(1145, 888, 0),(1145, 887, 0),(1145, 886, 0),(1145, 885, 0),(1145, 884, 0),(1145, 883, 0),(1145, 882, 0),(1145, 881, 0),(1145, 880, 0),(1145, 879, 0),(1145, 878, 0),(1145, 877, 0),(1145, 876, 0),(1145, 875, 0),(1145, 874, 0),(1145, 873, 0),(1145, 872, 0),(1145, 871, 0),(1145, 870, 0),(1145, 869, 0),(1145, 868, 0),(1145, 867, 0),(1145, 866, 0),(1145, 865, 0),(1145, 864, 0),(1145, 863, 0),(1145, 863, 1),(1145, 862, 1),(1145, 861, 1),(1145, 860, 1),(1145, 859, 1),(1145, 858, 1),(1145, 857, 1),(1145, 856, 1),(1145, 855, 1),(1145, 854, 1),(1145, 853, 1),(1145, 852, 1),(1145, 851, 1),(1145, 850, 1),(1145, 849, 1),(1145, 848, 1),(1145, 847, 1),(1145, 846, 1),(1145, 845, 1),(1145, 844, 1),(1145, 843, 1),(1145, 842, 1),(1145, 841, 1),(1145, 840, 1),(1145, 839, 1),(1145, 838, 1),(1145, 837, 1),(1145, 836, 1),(1145, 835, 1),(1145, 834, 1),(1145, 833, 1),(1145, 832, 1),(1145, 831, 1),(1145, 830, 1),(1145, 829, 1),(1145, 828, 1),(1145, 827, 1),(1145, 826, 1),(1145, 825, 1),(1145, 824, 1),(1145, 823, 1),(1145, 822, 1),(1145, 821, 1),(1145, 820, 1),(1145, 819, 1),(1145, 818, 1),(1145, 817, 1),(1145, 816, 1),(1145, 815, 1),(1145, 814, 1),(1145, 813, 1),(1145, 812, 1),(1145, 811, 1),(1145, 810, 1),(1145, 809, 1),(1145, 808, 1),(1145, 807, 1),(1145, 806, 1),(1145, 805, 1),(1145, 804, 1),(1145, 803, 1),(1145, 802, 1),(1145, 801, 1),(1145, 800, 1),(1145, 799, 1),(1145, 798, 1),(1145, 797, 1),(1145, 796, 1),(1144, 796, 1),(1143, 796, 1),(1142, 796, 1),(1141, 796, 1),(1140, 796, 1),(1139, 796, 1),(1138, 796, 1),(1137, 796, 1),(1136, 796, 1),(1135, 796, 1),(1134, 796, 1),(1134, 795, 1),(1133, 795, 1),(1132, 795, 1),(1132, 794, 1),(1131, 794, 1),(1130, 794, 1),(1130, 793, 1),(1129, 793, 1),(1129, 792, 1),(1128, 792, 1),(1127, 792, 1),(1127, 791, 1),(1126, 791, 1),(1126, 790, 1),(1125, 790, 1),(1125, 789, 1),(1124, 789, 1),(1124, 788, 1),(1123, 788, 1),(1123, 787, 1),(1122, 787, 1),(1122, 786, 1),(1121, 786, 1),(1121, 785, 1),(1120, 785, 1),(1120, 784, 1),(1119, 784, 1),(1119, 783, 1),(1118, 783, 1),(1118, 782, 1),(1118, 781, 1),(1117, 781, 1),(1117, 780, 1),(1116, 780, 1),(1116, 779, 1),(1115, 779, 1),(1115, 778, 1),(1115, 777, 1),(1114, 777, 1),(1114, 776, 1),(1113, 776, 1),(1113, 775, 1),(1112, 775, 1),(1112, 774, 1),(1112, 773, 1),(1111, 773, 1),(1111, 772, 1),(1110, 772, 1),(1110, 771, 1),(1110, 770, 1),(1109, 770, 1),(1109, 769, 1),(1109, 768, 1),(1108, 768, 1),(1108, 767, 1),(1107, 767, 1),(1107, 766, 1),(1107, 765, 1),(1106, 765, 1),(1106, 764, 1),(1105, 764, 1),(1105, 763, 1),(1105, 762, 1),(1104, 762, 1),(1104, 761, 1),(1103, 761, 1),(1103, 760, 1),(1103, 759, 1),(1102, 759, 1),(1102, 758, 1),(1101, 758, 1),(1101, 757, 1),(1101, 756, 1),(1100, 756, 1),(1100, 755, 1),(1099, 755, 1),(1099, 754, 1),(1099, 753, 1),(1098, 753, 1),(1098, 752, 1),(1097, 752, 1),(1097, 751, 1),(1097, 750, 1),(1096, 750, 1),(1096, 749, 1),(1095, 749, 1),(1095, 748, 1),(1095, 747, 1),(1094, 747, 1),(1094, 746, 1),(1093, 746, 1),(1093, 745, 1),(1093, 744, 1),(1092, 744, 1),(1092, 743, 1),(1091, 743, 1),(1091, 742, 1),(1091, 741, 1),(1090, 741, 1),(1090, 740, 1),(1089, 740, 1),(1089, 739, 1),(1088, 739, 1),(1088, 738, 1),(1088, 737, 1),(1087, 737, 1),(1087, 736, 1),(1086, 736, 1),(1086, 735, 1),(1086, 734, 1),(1085, 734, 1),(1085, 733, 1),(1084, 733, 1),(1084, 732, 1),(1083, 732, 1),(1083, 731, 1),(1083, 730, 1),(1082, 730, 1),(1082, 729, 1),(1081, 729, 1),(1081, 728, 1),(1081, 727, 1),(1080, 727, 1),(1080, 726, 1),(1079, 726, 1),(1079, 725, 1),(1078, 725, 1),(1078, 724, 1),(1078, 723, 1),(1077, 723, 1),(1077, 722, 1),(1076, 722, 1),(1076, 721, 1),(1076, 720, 1),(1075, 720, 1),(1075, 719, 1),(1074, 719, 1),(1074, 718, 1),(1073, 718, 1),(1073, 717, 1),(1073, 716, 1),(1072, 716, 1),(1072, 715, 1),(1071, 715, 1),(1071, 714, 1),(1071, 713, 1),(1070, 713, 1),(1070, 712, 1),(1069, 712, 1),(1069, 711, 1),(1069, 710, 1),(1068, 710, 1),(1068, 709, 1),(1067, 709, 1),(1067, 708, 1),(1067, 707, 1),(1066, 707, 1),(1066, 706, 1),(1065, 706, 1),(1065, 705, 1),(1064, 705, 1),(1064, 704, 1),(1064, 703, 1),(1063, 703, 1),(1063, 702, 1),(1062, 702, 1),(1062, 701, 1),(1062, 700, 1),(1061, 700, 1),(1061, 699, 1),(1060, 699, 1),(1060, 698, 1),(1059, 698, 1),(1059, 697, 1),(1059, 696, 1),(1058, 696, 1),(1058, 695, 1),(1057, 695, 1),(1057, 694, 1),(1056, 694, 1),(1056, 693, 1),(1056, 692, 1),(1055, 692, 1),(1055, 691, 1),(1054, 691, 1),(1054, 690, 1),(1053, 690, 1),(1053, 689, 1),(1052, 689, 1),(1052, 688, 1),(1051, 688, 1),(1051, 687, 1),(1050, 687, 1),(1050, 686, 1),(1049, 686, 1),(1049, 685, 1),(1048, 685, 1),(1048, 684, 1),(1047, 684, 1),(1047, 683, 1),(1046, 683, 1),(1046, 682, 1),(1045, 682, 1),(1045, 681, 1),(1044, 681, 1),(1044, 680, 1),(1043, 680, 1),(1043, 679, 1),(1042, 679, 1),(1042, 678, 1),(1041, 678, 1),(1041, 677, 1),(1040, 677, 1),(1040, 676, 1),(1039, 676, 1),(1038, 676, 1),(1038, 675, 1),(1037, 675, 1),(1037, 674, 1),(1036, 674, 1),(1036, 673, 1),(1035, 673, 1),(1034, 673, 1),(1034, 672, 1),(1033, 672, 1),(1033, 671, 1),(1032, 671, 1),(1031, 671, 1),(1031, 670, 1),(1030, 670, 1),(1030, 669, 1),(1029, 669, 1),(1028, 669, 1),(1028, 668, 1),(1027, 668, 1),(1026, 668, 1),(1026, 667, 1),(1025, 667, 1),(1024, 667, 1),(1024, 666, 1),(1023, 666, 1),(1022, 666, 1),(1022, 665, 1),(1021, 665, 1),(1020, 665, 1),(1020, 664, 1),(1019, 664, 1),(1018, 664, 1),(1018, 663, 1),(1017, 663, 1),(1016, 663, 1),(1016, 662, 1),(1015, 662, 1),(1014, 662, 1),(1014, 661, 1),(1013, 661, 1),(1012, 661, 1),(1011, 661, 1),(1011, 660, 1),(1010, 660, 1),(1009, 660, 1),(1009, 659, 1),(1008, 659, 1),(1007, 659, 1),(1006, 659, 1),(1006, 658, 1),(1005, 658, 1),(1004, 658, 1),(1003, 658, 1),(1002, 658, 1),(1002, 657, 1),(1001, 657, 1),(1000, 657, 1),(999, 657, 1),(999, 656, 1),(998, 656, 1),(997, 656, 1),(996, 656, 1),(995, 656, 1),(995, 655, 1),(994, 655, 1),(993, 655, 1),(992, 655, 1),(991, 655, 1),(991, 654, 1),(990, 654, 1),(989, 654, 1),(988, 654, 1),(987, 654, 1),(986, 654, 1),(985, 654, 1),(985, 653, 1),(984, 653, 1),(983, 653, 1),(982, 653, 1),(981, 653, 1),(980, 653, 1),(980, 652, 1),(979, 652, 1),(978, 652, 1),(977, 652, 1),(977, 653, 1),(976, 653, 1),(975, 653, 1),(974, 653, 1),(974, 652, 1),(973, 652, 1),(972, 652, 1),(972, 651, 1),(971, 651, 1),(970, 651, 1),(969, 651, 1),(969, 652, 1),(968, 652, 1),(967, 652, 1),(966, 652, 1),(965, 652, 1),(965, 653, 1),(965, 654, 1),(964, 654, 1),(963, 654, 1),(962, 654, 1),(961, 654, 1),(960, 654, 1),(959, 654, 1),(958, 654, 1),(957, 654, 1),(956, 654, 1),(955, 654, 1),(954, 654, 1),(953, 654, 1),(953, 653, 1),(953, 652, 1),(953, 651, 1),(953, 650, 1),(953, 649, 1),(953, 648, 1),(953, 647, 1),(953, 646, 1),(953, 645, 1),(953, 644, 1),(953, 643, 1),(953, 642, 1),(953, 641, 1),(953, 640, 1),(953, 639, 1),(953, 638, 1),(953, 637, 1),(953, 636, 1),(953, 635, 1),(953, 634, 1),(953, 633, 1),(953, 632, 1),(953, 631, 1),(953, 630, 1),(953, 629, 1),(953, 628, 1),(953, 627, 1),(953, 626, 1),(953, 626, 0),]
    if type(path) != type(None) :
        for p in path:
            wx = remap(p[0], 0, 512, -512, -256)
            wy = remap(p[1], 0, 512, 256, 512)
            costs_arr[p[0]][p[1]] = 50*(p[2]+1)
            print(wx, wy)
    

    print(arr)
    image = Image.fromarray((arr*255).astype(numpy.uint8), mode="L")
    image.save("test.png")
    pyplot.imshow(costs_arr)
    pyplot.show()